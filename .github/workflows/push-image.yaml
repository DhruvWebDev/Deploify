name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Commit SHA
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Docker Hub Login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Login to AWS ECR
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-north-1

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set AWS ECR Registry
        run: echo "AWS_ECR_REGISTRY=${{ steps.ecr-login.outputs.registry }}" >> $GITHUB_ENV

      - name: Authenticate Docker Client with AWS 
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Services
        run: |
          echo "Building all services with Docker Compose..."
          docker compose build

      - name: List Docker Images
        run: docker images

      # Tag & Push to Docker Hub
      - name: Push to Docker Hub
        run: |
          for service in deploify-deploy-code deploify-frontend deploify-webhook-event-handler deploify-request-handler; do
            echo "Pushing ${service} to Docker Hub..."
            docker tag ${service}:latest dhruvwebdev146/${service}:${COMMIT_SHA}
            docker tag ${service}:latest dhruvwebdev146/${service}:latest
            docker push dhruvwebdev146/${service}:${COMMIT_SHA}
            docker push dhruvwebdev146/${service}:latest
          done

      # Tag & Push to AWS ECR (Ensure the repository is public if needed)
      - name: Push to AWS ECR
        run: |        
          for service in deploify-deploy-code deploify-frontend deploify-webhook-event-handler deploify-request-handler; do
            echo "Pushing ${service} to ECR at $AWS_ECR_REGISTRY..."
            docker tag ${service}:latest $AWS_ECR_REGISTRY/${service}:latest
            docker push $AWS_ECR_REGISTRY/${service}:latest
          done
